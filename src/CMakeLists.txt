INCLUDE_DIRECTORIES(include)
IF(WIN32)
FIND_PATH(PCAP_INCLUDE pcap.h)
INCLUDE_DIRECTORIES(${PCAP_INCLUDE})
ENDIF(WIN32)

IF(UNIX)
SET(CMAKE_CXX_FLAGS "-std=c++0x -O2 -g")
ENDIF(UNIX)
SET(CMAKE_CXX_FLAGS_DEBUG -DMPCAP_DEBUG)

SET(MPCAP_SOURCES
    pcap/reader.cc
    protocol/ethernet/address.cc
    protocol/ipv4/address.cc
    protocol/tcp/address.cc
    protocol/tcp/packet.cc
    protocol/tcp/reassembler.cc)

IF(WIN32)
FIND_LIBRARY(PCAP_LIBRARY NAMES wpcap PATH_SUFFIXES x64)
ENDIF(WIN32)

SET(MPCAP_SHARED_LIBRARY_OUTPUT mpcap)
ADD_LIBRARY(${MPCAP_SHARED_LIBRARY} SHARED ${MPCAP_SOURCES})
IF(WIN32)
TARGET_LINK_LIBRARIES(${MPCAP_SHARED_LIBRARY} ${PCAP_LIBRARY} Ws2_32)
ENDIF(WIN32)
SET_TARGET_PROPERTIES(${MPCAP_SHARED_LIBRARY} PROPERTIES OUTPUT_NAME ${MPCAP_SHARED_LIBRARY_OUTPUT})

IF(UNIX)
SET(MPCAP_STATIC_LIBRARY_OUTPUT mpcap)
ADD_LIBRARY(${MPCAP_STATIC_LIBRARY} STATIC ${MPCAP_SOURCES})
SET_TARGET_PROPERTIES(${MPCAP_STATIC_LIBRARY} PROPERTIES OUTPUT_NAME ${MPCAP_STATIC_LIBRARY_OUTPUT})
ENDIF(UNIX)

IF(UNIX)
INSTALL(TARGETS ${MPCAP_STATIC_LIBRARY} ARCHIVE DESTINATION lib)
INSTALL(TARGETS ${MPCAP_SHARED_LIBRARY} LIBRARY DESTINATION lib)
INSTALL(DIRECTORY include/mpcap DESTINATION include FILES_MATCHING PATTERN "*.h")
ENDIF(UNIX)
